{"version":3,"sources":["components/Navbar.js","components/Textbox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","role","onClick","switchMode","htmlFor","btnMode","placeholder","Textbox","useState","text","setText","style","backgroundColor","for","class","color","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","trim","bold","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setBtnMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb17f21a.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) { \r\n  \r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"#\"> .^. Text Formator</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Change To..\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Upper Case</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Lower Case</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Remove spaces</a></li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.switchMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className =\"form-check-label mx-2\" htmlFor=\"flexSwitchCheckDefault\" >{props.btnMode}</label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className={`btn btn-outline-${props.mode==='light' ? 'dark' : 'light'}`} type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function Textbox(props) {\r\n\r\n    const upperCase=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has Converted to the UPPERCASE\" , \"success\");\r\n    }\r\n    const lowerCase=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has Converted to the lowercase\" , \"success\");\r\n    }\r\n    const removeSpace=()=>{\r\n        let newText=text.trim();\r\n        setText(newText);\r\n        props.showAlert(\"Removed Spaces\" , \"success\");\r\n    }\r\n   const bold=()=>{\r\n       let newText=text.bold()\r\n       setText(newText)\r\n   }\r\n \r\n    const clearTexbox=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Textbox has Cleared\" , \"danger\");\r\n    }\r\n    \r\n    const upOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n\r\n        <>\r\n        <div className=\"mb-3 my-4 container\" style={{backgroundColor: props.mode==='dark' ? 'grey' : 'white'}}>\r\n        <label for=\"exampleFormControlTextarea1 \" class=\"form-label\" id=\"textbox\"> <h2  style={{color: props.mode==='light' ? 'black' : 'white'}}> {props.heading} </h2> </label>\r\n        <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" value={text} onChange = {upOnChange}  rows=\"8\" placeholder=\"Write or paste your text here  \" style={{backgroundColor: props.mode==='dark' ? 'grey' : 'white',color: props.mode==='dark' ? 'white' : 'black'}}></textarea>\r\n        <button className={`btn btn-${props.mode==='light' ? 'outline-primary':'success'} my-4 `} onClick={upperCase}>UPPER CASE</button>\r\n        <button className={`btn btn-${props.mode==='light' ? 'outline-primary':'warning'} my-4 mx-3`}onClick={lowerCase}>lower case</button>\r\n        <button className={`btn btn-${props.mode==='light' ? 'outline-primary':'info'} my-4 mx-2`}onClick={removeSpace}>Remove White space</button>\r\n        <button className={`btn btn-${props.mode==='light' ? 'outline-primary':'light'} my-4 mx-3`}onClick={bold}>Bold</button>\r\n        <button className={`btn btn-danger my-4 mx-3`} onClick={clearTexbox}>Clear</button>\r\n      </div>\r\n\r\n      <div className=\"container\" style={{color: props.mode==='light' ? 'black' : 'white'}}>\r\n          <h2 >Text Counter</h2>\r\n          <p> {text.split(\" \").length} :  Words And {text.length} :  Characters</p>\r\n          <p>{text.split(\" \").length*0.008} : min to read</p>\r\n          <h3>Preview </h3>\r\n          <p>{text}</p>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize =(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong> {capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/Textbox';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// // for the routing \n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [btnMode, setBtnMode] = useState(\"Dark Mode\");\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n const switchMode=()=>{\n    if (mode==='light') {\n      setMode('dark')\n      setBtnMode(\"Light Mode\")\n      document.body.style.backgroundColor= \"grey\"\n      showAlert(\"Dark Mode has Enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      setBtnMode(\"Dark Mode\")\n      document.body.style.backgroundColor= \"white\"\n      showAlert(\"Light Mode has Enabled\",\"success\")\n    }\n  }\n\n\n\n\n  \n  return(\n    <>   \n{/* <Router> */}\n<Navbar mode={mode} switchMode={switchMode} btnMode={btnMode}/>\n<Alert alert={alert}/>  \n<div className=\"container my-3\">\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\"> */}\n              <Textbox heading=\"Enter Your Text Here\"  mode={mode} showAlert={showAlert} />\n          {/* </Route>\n  </Switch> */}\n</div>\n{/* </Router> */}\n\n\n\n  </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}