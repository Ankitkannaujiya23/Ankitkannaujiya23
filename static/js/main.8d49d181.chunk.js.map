{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textbox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","darkModeStyle","setDarkModeStyle","btnDark","setBtnDark","className","style","class","type","role","onClick","border","id","for","Navbar","props","mode","to","switchMode","htmlFor","btnMode","placeholder","Textbox","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","trim","bold","split","filter","element","elements","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setBtnMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d49d181.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [darkModeStyle, setDarkModeStyle] = useState({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    })\r\n    const [btnDark, setBtnDark] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleDark = () => {\r\n        if (darkModeStyle.color === \"black\") {\r\n            setDarkModeStyle({\r\n                color: \"white\",\r\n                backgroundColor: \"black\",\r\n                border: \"1px solid white\"\r\n            })\r\n            setBtnDark(\"Disable Dark Mode\")\r\n        }\r\n        else {\r\n\r\n            setDarkModeStyle({\r\n                color: \"black\",\r\n                backgroundColor: \"white\"\r\n            })\r\n            setBtnDark(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\" style={darkModeStyle}>\r\n                <h1>About Us</h1>\r\n                <div className=\"my-3\">\r\n                    {/* <button onClick={toggleDark} type=\"button\" className=\"btn btn-dark my-3\">{btnDark}</button> */}\r\n\r\n                    <div class=\"form-check form-switch\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={toggleDark} id=\"flexSwitchCheckDefault\" />\r\n                        <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">{btnDark}</label>\r\n                    </div>  \r\n                </div>\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\" style={darkModeStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={darkModeStyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={darkModeStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" style={darkModeStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={darkModeStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" style={darkModeStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) { \r\n  \r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\"> .^. Text Formator</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.switchMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className =\"form-check-label mx-2\" htmlFor=\"flexSwitchCheckDefault\" >{props.btnMode}</label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className={`btn btn-outline-${props.mode==='light' ? 'dark' : 'light'}`} type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function Textbox(props) {\r\n\r\n    const upperCase=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has Converted to the UPPERCASE\" , \"success\");\r\n    }\r\n    const lowerCase=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has Converted to the lowercase\" , \"success\");\r\n    }\r\n    const removeSpace=()=>{\r\n        let newText=text.trim();\r\n        setText(newText);\r\n        props.showAlert(\"Removed Spaces\" , \"success\");\r\n    }\r\nconst copy=()=>{\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text is copy to clipboard\" ,\"success\");\r\n}\r\n\r\n   const bold=()=>{\r\n       let newText=text.bold()\r\n       setText(newText)\r\n   }\r\n \r\n    const clearTexbox=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Textbox has Cleared\" , \"danger\");\r\n    }\r\n    \r\n    const upOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n\r\n        <>\r\n        <div className=\"mb-3 my-4 container\" style={{backgroundColor: props.mode==='dark' ? '#04170a' : 'white'}}>\r\n        <label for=\"exampleFormControlTextarea1 \" class=\"form-label\" id=\"textbox\"> <h2  style={{color: props.mode==='light' ? 'black' : 'white'}}> {props.heading} </h2> </label>\r\n        <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" value={text} onChange = {upOnChange}  rows=\"8\" placeholder=\"Write or paste your text here  \" style={{backgroundColor: props.mode==='dark' ? '#04170a' : 'white',color: props.mode==='dark' ? 'white' : 'black'}}></textarea>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode==='light' ? 'outline-primary':'success'} my-4 `} onClick={upperCase}>UPPER CASE</button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode==='light' ? 'outline-primary':'warning'} my-4 mx-3`}onClick={lowerCase}>lower case</button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode==='light' ? 'outline-primary':'primary'} my-4 mx-3`}onClick={copy}>Copy</button>\r\n        <button disabled={text.length===0} className={`btn btn-${props.mode==='light' ? 'outline-primary':'info'} my-4 mx-2`}onClick={removeSpace}>Remove White space</button>\r\n        <button disabled={text.length===0} className={` disabled btn btn-${props.mode==='light' ? 'outline-primary':'light'} my-4 mx-3`}onClick={bold}>Bold</button>\r\n        <button disabled={text.length===0} className={`btn btn-danger my-4 mx-3`} onClick={clearTexbox}>Clear</button>\r\n      </div>\r\n\r\n      <div className=\"container\" style={{color: props.mode==='light' ? 'black' : 'white'}}>\r\n          <h2 >Text Counter</h2>\r\n          <p> {text.split(/\\s+/).filter((element)=>{return element.length !==0}).length} :  Words And {text.length} :  Characters</p>\r\n          <p>{text.split(/\\s+/).filter((elements)=>{return elements.length !==0 }).length*0.008} : min to read</p>\r\n          <h3>Preview </h3>\r\n          <p>{text}</p>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize =(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n       { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong> {capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n        </div> }\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/Textbox';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// for the routing \nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [btnMode, setBtnMode] = useState(\"Dark Mode\");\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n const switchMode=()=>{\n    if (mode==='light') {\n      setMode('dark')\n      setBtnMode(\"Light Mode\")\n      document.body.style.backgroundColor= \"#04170a\"\n      showAlert(\"Dark Mode has Enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      setBtnMode(\"Dark Mode\")\n      document.body.style.backgroundColor= \"white\"\n      showAlert(\"Light Mode has Enabled\",\"success\")\n    }\n  }\n\n\n\n\n  \n  return(\n    <>   \n <Router> \n<Navbar mode={mode} switchMode={switchMode} btnMode={btnMode}/>\n<Alert alert={alert}/>  \n<div className=\"container my-3\">\n <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\"> \n              <Textbox heading=\"Enter Your Text Here\"  mode={mode} showAlert={showAlert} />\n          </Route>\n  </Switch> \n</div>\n</Router>\n\n\n\n  </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}